plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'maven'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 1018
        versionName "1.1.8"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "com.google.android.material:material:$material_version"

}

uploadArchives {
    String mavenRepoURL = System.getenv('MAVEN_REPO_RELEASE_URL') ?: ''
    String nexusUserName = System.getenv("NEXUS_USERNAME") ?: ''
    String nexusPassword = System.getenv("NEXUS_PASSWORD") ?: ''
    String mavenGroupId = 'com.jiandanlangman'
    String extension = 'aar'
    String mavenArtifactId = 'htmltextview'
    String versionName = android.defaultConfig.versionName

    gradle.buildStarted {
        if ('' == mavenRepoURL || '' == nexusUserName || '' == nexusPassword) {
            String exception = 'undefined param NEXUS_USERNAME and param NEXUS_PASSWORD.'
            println(exception)
            throw IllegalArgumentException(exception)
        }
    }

    repositories {
        mavenDeployer {
            repository(url: mavenRepoURL) {
                authentication(userName: nexusUserName, password: nexusPassword)
            }
            pom.project {
                version versionName
                artifactId mavenArtifactId
                groupId mavenGroupId
                packaging extension
            }
        }
    }

    gradle.buildFinished {
        if ('' != mavenRepoURL && '' != nexusUserName && '' != nexusPassword) {
            String mavenGroupPath = mavenGroupId.replace(".", "/")
            println("Upload success, URL: $mavenRepoURL/$mavenGroupPath/$mavenArtifactId/$versionName/$mavenArtifactId-$versionName.$extension")
        }
    }
}